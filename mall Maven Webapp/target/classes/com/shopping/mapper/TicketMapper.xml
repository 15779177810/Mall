<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shopping.mapper.TicketMapper" >
  <resultMap id="BaseResultMap" type="com.shopping.po.Ticket" >
    <id column="ticket_id" property="ticketId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="tooken" property="tooken" jdbcType="VARCHAR" />
    <result column="expired" property="expired" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ticket_id, user_id, tooken, expired, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shopping.po.TicketExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ticket
    where ticket_id = #{ticketId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ticket
    where ticket_id = #{ticketId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shopping.po.TicketExample" >
    delete from ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shopping.po.Ticket" >
    insert into ticket (ticket_id, user_id, tooken, 
      expired, state)
    values (#{ticketId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{tooken,jdbcType=VARCHAR}, 
      #{expired,jdbcType=VARCHAR}, #{state,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.shopping.po.Ticket" >
    insert into ticket
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ticketId != null" >
        ticket_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="tooken != null" >
        tooken,
      </if>
      <if test="expired != null" >
        expired,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ticketId != null" >
        #{ticketId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="tooken != null" >
        #{tooken,jdbcType=VARCHAR},
      </if>
      <if test="expired != null" >
        #{expired,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shopping.po.TicketExample" resultType="java.lang.Integer" >
    select count(*) from ticket
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ticket
    <set >
      <if test="record.ticketId != null" >
        ticket_id = #{record.ticketId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.tooken != null" >
        tooken = #{record.tooken,jdbcType=VARCHAR},
      </if>
      <if test="record.expired != null" >
        expired = #{record.expired,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ticket
    set ticket_id = #{record.ticketId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      tooken = #{record.tooken,jdbcType=VARCHAR},
      expired = #{record.expired,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shopping.po.Ticket" >
    update ticket
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="tooken != null" >
        tooken = #{tooken,jdbcType=VARCHAR},
      </if>
      <if test="expired != null" >
        expired = #{expired,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
    </set>
    where ticket_id = #{ticketId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shopping.po.Ticket" >
    update ticket
    set user_id = #{userId,jdbcType=INTEGER},
      tooken = #{tooken,jdbcType=VARCHAR},
      expired = #{expired,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIT}
    where ticket_id = #{ticketId,jdbcType=INTEGER}
  </update>
</mapper>