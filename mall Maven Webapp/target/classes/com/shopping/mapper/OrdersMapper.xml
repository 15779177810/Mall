<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shopping.mapper.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.shopping.po.Orders" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="UserOrder" type="com.shopping.vo.UserOrder" >
    <result column="order_id" property="order_id" jdbcType="INTEGER" />
    <result column="user_id" property="user_id" jdbcType="INTEGER" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="BIT" />
    <collection property="orderItems" ofType="com.shopping.vo.OrderItem">
      <result column="order_item_id" property="order_item_id" jdbcType="INTEGER" />
      <result column="count" property="count" jdbcType="INTEGER" />
      <result column="good_id" property="good_id" jdbcType="INTEGER" />
      <result column="type_id" property="type_id" jdbcType="INTEGER" />
      <result column="good_name" property="good_name" jdbcType="VARCHAR" />
      <result column="good_desc" property="good_desc" jdbcType="VARCHAR" />
      <result column="price" property="price" jdbcType="DOUBLE" />
      <result column="img" property="img" jdbcType="VARCHAR" />
    </collection>
  </resultMap>

  <resultMap id="OrderGood" type="com.shopping.vo.OrderGoodVo">
    <id column="order_item_id" property="order_item_id" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="order_id" property="order_id" jdbcType="INTEGER" />
    <association property="goods" javaType="com.shopping.po.Goods">
      <result column="good_id" property="goodId" jdbcType="INTEGER" />
      <result column="type_id" property="typeId" jdbcType="INTEGER" />
      <result column="good_name" property="goodName" jdbcType="VARCHAR" />
      <result column="good_desc" property="goodDesc" jdbcType="VARCHAR" />
      <result column="price" property="price" jdbcType="DOUBLE" />
      <result column="img" property="img" jdbcType="VARCHAR" />
      <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    </association>
  </resultMap>


  <resultMap id="ShopOrder" type="com.shopping.vo.ShopOrderVo" >
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="user_name" property="buyerName" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <collection property="goods" ofType="com.shopping.vo.SimpleGoodVo">
      <result column="good_id" property="goodId" jdbcType="INTEGER" />
      <result column="good_name" property="goodName" jdbcType="VARCHAR" />
      <result column="img" property="img" jdbcType="VARCHAR" />
    </collection>
  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_id, user_id, date, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shopping.po.OrdersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shopping.po.OrdersExample" >
    delete from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shopping.po.Orders" >
    <selectKey keyProperty="orderId" resultType="INTEGER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into orders (order_id, user_id, date, 
      state)
    values (#{orderId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP},
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shopping.po.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shopping.po.OrdersExample" resultType="java.lang.Integer" >
    select count(*) from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orders
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orders
    set order_id = #{record.orderId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      date = #{record.date,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shopping.po.Orders" >
    update orders
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shopping.po.Orders" >
    update orders
    set user_id = #{userId,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>

  <select id="selectUserOrder" resultMap="UserOrder" parameterType="Integer">
     SELECT orders.order_id,orders.user_id,orders.date,orders.state,order_item_id,`count`,goods.good_id,type_id,good_name,good_desc,price,img
    FROM orders JOIN order_item ON orders.order_id = order_item.order_id JOIN goods ON goods.good_id = order_item.good_id
    WHERE orders.user_id = #{userId} order by orders.date DESC ;
  </select>

  <select id="selectOrderGood" resultMap="OrderGood" parameterType="Integer">
    SELECT * FROM order_item JOIN goods ON order_item.good_id = goods.good_id
    WHERE order_item.order_id = #{orderId};
  </select>

  <select id="selectOrderByShopUserId" resultMap="ShopOrder" parameterType="Integer">
    SELECT * from shop_orders where user_id = #{userId}
  </select>
</mapper>