<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shopping.mapper.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.shopping.po.Goods" >
    <id column="good_id" property="goodId" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="good_name" property="goodName" jdbcType="VARCHAR" />
    <result column="good_desc" property="goodDesc" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
  </resultMap>
  
   <resultMap id="CommentResultMap" type="com.shopping.po.Goods" >
    <id column="good_id" property="goodId" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="good_name" property="goodName" jdbcType="VARCHAR" />
    <result column="good_desc" property="goodDesc" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    <collection property="goodComment" ofType="com.shopping.po.GoodComment">
    	<id column="comment_id" property="commentId"/>
    	<result column="good_comment" property="goodComment"/>
    	<result column="user_id" property="userId"/>
    	<result column="good_id" property="goodId"/>
    	<result column="time" property="time"/>
    	
    </collection>
  </resultMap>
  
  <resultMap id="GoodsVo" type="com.shopping.vo.GoodsVo" >
    <id column="good_id" property="goodId" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="good_name" property="goodName" jdbcType="VARCHAR" />
    <result column="good_desc" property="goodDesc" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    good_id, type_id, good_name, good_desc, price, img, shop_id
  </sql>
  <sql id="WithDept_Column_List">
  	g.good_id, g.type_id, g.good_name, g.good_desc, g.price, g.img, g.shop_id,c.good_Comment,c.time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shopping.po.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where good_id = #{goodId,jdbcType=INTEGER}
  </select>
  	

  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods
    where good_id = #{goodId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shopping.po.GoodsExample" >
    delete from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shopping.po.Goods" >
    insert into goods (good_id, type_id, good_name, 
      good_desc, price, img, 
      shop_id)
    values (#{goodId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{goodName,jdbcType=VARCHAR}, 
      #{goodDesc,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{img,jdbcType=VARCHAR}, 
      #{shopId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shopping.po.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodId != null" >
        good_id,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="goodName != null" >
        good_name,
      </if>
      <if test="goodDesc != null" >
        good_desc,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="img != null" >
        img,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodId != null" >
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="goodName != null" >
        #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="goodDesc != null" >
        #{goodDesc,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shopping.po.GoodsExample" resultType="java.lang.Integer" >
    select count(*) from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods
    <set >
      <if test="record.goodId != null" >
        good_id = #{record.goodId,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.goodName != null" >
        good_name = #{record.goodName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodDesc != null" >
        good_desc = #{record.goodDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.img != null" >
        img = #{record.img,jdbcType=VARCHAR},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods
    set good_id = #{record.goodId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      good_name = #{record.goodName,jdbcType=VARCHAR},
      good_desc = #{record.goodDesc,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      img = #{record.img,jdbcType=VARCHAR},
      shop_id = #{record.shopId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shopping.po.Goods" >
    update goods
    <set >
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="goodName != null" >
        good_name = #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="goodDesc != null" >
        good_desc = #{goodDesc,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
    </set>
    where good_id = #{goodId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shopping.po.Goods" >
    update goods
    set type_id = #{typeId,jdbcType=INTEGER},
      good_name = #{goodName,jdbcType=VARCHAR},
      good_desc = #{goodDesc,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      img = #{img,jdbcType=VARCHAR},
      shop_id = #{shopId,jdbcType=INTEGER}
    where good_id = #{goodId,jdbcType=INTEGER}
  </update>
  
  
<select id="findGoodById" parameterType="Integer" resultMap="GoodsVo">
  	select * from goods
    where good_id = #{goodId,jdbcType=INTEGER}
  </select>
	<select id="findById" parameterType="Integer" resultMap="BaseResultMap">
  	select * from goods
    where good_id = #{goodId,jdbcType=INTEGER}
  </select>

  <select id="selectByPrimaryKeyWithComm" resultMap="CommentResultMap" parameterType="INTEGER">
    select
    <include refid="WithDept_Column_List"></include>
    From goods g
    left join good_comment c on c.good_id=g.good_id
    where g.good_id=#{good_id,jdbcType=INTEGER} ORDER BY c.time DESC;
  </select>
</mapper>